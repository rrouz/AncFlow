Building DAG of jobs...
Using shell: /bin/bash
Provided cores: 4
Rules claiming more threads will be scaled down.
Job stats:
job          count
---------  -------
anc_fasta        1
total            1

Select jobs to execute...

[Sun Sep  3 16:09:19 2023]
rule anc_fasta:
    input: autophy_msa.fasta.state
    output: ancestral_node_sequences.fasta
    jobid: 0
    reason: Missing output files: ancestral_node_sequences.fasta
    resources: tmpdir=/var/folders/6w/cbbj2d4d1cs82bbv3lr2jt700000gn/T

RuleException in rule anc_fasta in file /Users/ryinrouzbehani/Documents/SDSU/Research/WF1/Snakefile, line 142:
NameError: The name 'node' is unknown in this context. Please make sure that you defined that variable. Also note that braces not used for variable access have to be escaped by repeating them, i.e. {{print $1}}, when formatting the following:

        import pandas as pd

        # Path to the TSV file
        file_path = "{input.tsv_file}"

        # Initialize an empty dictionary to store sequences for each Node
        sequences = {{}}

        # Read the TSV file line by line, skipping lines starting with '#'
        with open(file_path, 'r') as file:
            current_node = None
            current_sequence = ''
            first_line = True  # Variable to track the first line

            for line in file:
                if not line.startswith('#'):
                    if first_line:
                        first_line = False
                        continue  # Skip the first line

                    parts = line.strip().split('	')
                    node, state = parts[0], parts[2]

                    if node != current_node:
                        if current_node is not None:
                            sequences[current_node] = current_sequence
                        current_node = node
                        current_sequence = state
                    else:
                        current_sequence += state

        # Add the last sequence
        if current_node is not None:
            sequences[current_node] = current_sequence

        # Create and write the sequences to a FASTA file
        with open("{output.fasta_file}", 'w') as fasta_file:
            for node, sequence in sequences.items():
                fasta_file.write(f'>{node}\n{sequence}\n')
        
